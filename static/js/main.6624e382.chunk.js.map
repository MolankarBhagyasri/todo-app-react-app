{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrE","index","type","placeholder","value","onChange","e","target","map","itemVal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAiBeA,EAfE,SAACC,GAEd,OACI,mCACJ,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAc,cAAY,OACnCC,QAAY,WACZF,EAAMG,SAASH,EAAMI,OAEzB,6BAAKJ,EAAMK,aC+CJC,EAtDH,WACV,MAAgCC,mBAAS,IAAzC,mBAAMC,EAAN,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAMG,EAAN,KAAYC,EAAZ,KAaMC,EAAa,SAACR,GAClBS,QAAQC,IAAI,WAEhBH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAAEC,EAAMC,GAC1B,OAAOA,IAAUd,SAOxB,OACE,mCACA,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,4CACA,uBACA,uBAAOkB,KAAK,OAAOC,YAAY,iBAC/BC,MAAOb,EACPc,SAhCc,SAACC,GAClBd,EAAac,EAAEC,OAAOH,UAgCnB,wBAAQnB,QA7BQ,WACnBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAUA,GAAV,CAAmBP,OAErBC,EAAa,KAyBV,eACA,6BACEC,EAAMe,KAAI,SAACC,EAAQR,GACnB,OAAO,cAAC,EAAD,CAEGd,GAAIc,EACJb,KAAMqB,EACNvB,SAAUS,GAHLM,gBCjCRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6624e382.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDoList = (props) =>{\r\n\r\n    return (\r\n        <>   \r\n    <div className=\"todo_style\">\r\n        <i className=\"fa fa-times\" aria-hidden=\"true\"\r\n            onClick=  { () =>{\r\n            props.onSelect(props.id);\r\n            }}/>\r\n        <li>{props.text}</li>\r\n    </div>\r\n    </>\r\n    \r\n    );\r\n};\r\nexport default ToDoList;","import React, { useState } from 'react';\nimport ToDoList from './ToDoList';\n\n\nconst App = () => {\n  const[inputList,setInputList] = useState(\"\");\n  const[Items,setItems] = useState([]);\n\n  const itemEvent = (e) => {\n   setInputList(e.target.value);\n  };\n\n  const listOfItems = () => {\n   setItems((oldItems) =>{\n     return[...oldItems,inputList];\n   })\n   setInputList(\"\");\n  };\n\n  const deleteItems =(id)=>{\n    console.log('deleted');\n\nsetItems((oldItems) =>{\n  return oldItems.filter(( arrE, index) =>{\n       return index !== id;\n  });\n\n \n});\n  }\n\nreturn(\n  <>\n  <div className=\"main_div\">\n    <div className=\"center_div\">\n      <br/>\n      <h1>TO-DO LIST</h1>\n      <br/>\n      <input type=\"text\" placeholder=\"Add items here\" \n      value={inputList}\n      onChange={itemEvent}/>\n      <button onClick={listOfItems}>+</button>\n      <ol>\n      { Items.map((itemVal,index) => {\n        return <ToDoList \n                  key={index} \n                  id={index} \n                  text={itemVal}\n                  onSelect={deleteItems}/>;\n          })}\n      </ol>\n    </div>\n\n  </div>\n  </>\n\n);\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}